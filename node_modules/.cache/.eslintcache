[{"/Users/dom/Documents/rest-countries-api/src/index.js":"1","/Users/dom/Documents/rest-countries-api/src/App.js":"2","/Users/dom/Documents/rest-countries-api/src/components/Navbar.js":"3","/Users/dom/Documents/rest-countries-api/src/components/Filter.js":"4","/Users/dom/Documents/rest-countries-api/src/components/Countries.js":"5","/Users/dom/Documents/rest-countries-api/src/components/CountriesItem.js":"6","/Users/dom/Documents/rest-countries-api/src/pages/Home.js":"7","/Users/dom/Documents/rest-countries-api/src/pages/Details.js":"8"},{"size":229,"mtime":1623518819216,"results":"9","hashOfConfig":"10"},{"size":457,"mtime":1623581064574,"results":"11","hashOfConfig":"10"},{"size":1666,"mtime":1623653933663,"results":"12","hashOfConfig":"10"},{"size":2398,"mtime":1623576546253,"results":"13","hashOfConfig":"10"},{"size":678,"mtime":1623578499816,"results":"14","hashOfConfig":"10"},{"size":1102,"mtime":1623605999734,"results":"15","hashOfConfig":"10"},{"size":246,"mtime":1623578958749,"results":"16","hashOfConfig":"10"},{"size":3907,"mtime":1623638653442,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1i6hdod",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/Users/dom/Documents/rest-countries-api/src/index.js",[],["36","37"],"/Users/dom/Documents/rest-countries-api/src/App.js",[],"/Users/dom/Documents/rest-countries-api/src/components/Navbar.js",[],"/Users/dom/Documents/rest-countries-api/src/components/Filter.js",[],"/Users/dom/Documents/rest-countries-api/src/components/Countries.js",[],"/Users/dom/Documents/rest-countries-api/src/components/CountriesItem.js",[],"/Users/dom/Documents/rest-countries-api/src/pages/Home.js",[],"/Users/dom/Documents/rest-countries-api/src/pages/Details.js",["38"],"import React, { useEffect, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\n\n\nfunction Details() {\n    const location = useLocation();\n    const { country } = location.state;\n    const [borders, setBorders] = useState([]);\n    useEffect(() => {\n        if(country.borders.length > 0)  {\n            let query =  country.borders.join(\";\");\n\n            fetch(`https://restcountries.eu/rest/v2/alpha?codes=${query}`)\n            .then(response => response.json())\n            .then(countriesList => {\n                setBorders(countriesList);\n            })\n            .catch(error => console.log(error));\n        }\n        \n    }, [location])\n\n    return (\n        <div className=\"details\">\n            <Link to=\"/\"><button className=\"back flex flex-ai-c\"><BsArrowLeft/>Back</button></Link>\n            <div className=\"details__container flex flex-jc-sb \">\n                <img src={country.flag} alt={country.name}/>\n                <div className=\"details__body \">\n                    <h3 className=\"details__name\">{country.name}</h3>\n\n                    <div className=\"details__info flex\">\n                        <div className=\"body__left\">\n                            <div>\n                                <strong>Native name: </strong>{country.nativeName}\n                            </div>\n                            <div>\n                                <strong>Population: </strong>{country.population}\n                            </div>\n                            <div>\n                                <strong>Region: </strong>{country.region}\n                            </div>\n                            <div>\n                                <strong>Sub region: </strong>{country.subregion}\n                            </div>\n                            <div>\n                                <strong>Capital: </strong>{country.capital}\n                            </div>\n                        </div>\n\n                        <div className=\"body__right\">\n                            <div>\n                                <strong>Top Level Domain: </strong>{country.topLevelDomain[0]}\n                            </div>\n                            <div>\n                                <strong>Currencies: </strong>{country.currencies.map(currency => currency.code + ', ')}\n                            </div>\n                            <div>\n                                <strong>Languages: </strong>{country.languages.map(language => language.name + ', ')}\n                            </div>\n                        </div>\n                    </div>\n                    \n                    \n                    {\n                        borders.length > 0 && \n                        <div className=\"border flex flex-ai-c\">\n                            <div className=\"border__title\">Border Countries:</div>\n                            {borders.map(countryItem=> (\n                                <Link\n                                    key={countryItem.numericCode}\n                                    to={{\n                                        pathname: `/details/${countryItem.name}`,\n                                        state: {\n                                            country: countryItem,\n                                        },\n                                    }}\n                                    className=\"border__link\" \n                                >\n                                    <button className=\"border__btn\">\n                                        {countryItem.name}\n                                    </button>\n                                </Link>\n                            ))}\n                        </div>\n                    }\n                    \n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Details\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":22,"column":8,"nodeType":"45","endLine":22,"endColumn":18,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'country.borders'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [country.borders, location]",{"range":"52","text":"53"},[707,717],"[country.borders, location]"]